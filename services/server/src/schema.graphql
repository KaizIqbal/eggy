# import * from "./generated/prisma.graphql"
type SuccessMessage{
  message: String
}

type Mutation {
  # Eggs
  createEgg(title: String! eggname:String! cursorTypes: [cursorType]!): Egg!
  updateEgg(eggname:String! title: String): Egg!
  deleteEgg(eggname:String!): Egg!

  publish(id:ID!): Egg!
  unPublish(id:ID!): Egg!

  # Cursors
  createCursor(name:String! frames:Int! flavourId:ID!): Cursor!

  # Flavour
  createFlavour(name:String! eggId:ID!): Flavour!  
  
  # Users
  signup(email:String! password:String! username: String! name:String!): User!
  signin(email:String! password:String!): User!
  signout: SuccessMessage

  requestReset(email:String!): SuccessMessage
  resetPassword(resetToken:String! ,passwordSelect:String! ,confirmPassword:String!): User!

  updatePermissions(permissions:[Permission] ,userId:ID!): User
}

type Query {
  # Eggs 
  egg(where: EggWhereUniqueInput!): Egg
  publishedEggsConnection(after: String first: Int): EggConnection!
  userEggsConnection(after: String first: Int): EggConnection!

  # Cursors
  cursors(eggname: String!):[Cursor]!

  # Cursors
  flavours(eggId: ID!):[Flavour]!

  #User
  me: User
  users: [User]!
}

type User {
  id: ID!
  name: String!
  username: String!
  email: String!
  password: String!
  permissions: [Permission!]!
}
